# Cloud Build configuration for automatic deployment
steps:
  # Step 1: Build backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/standing-set-backend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/standing-set-backend:latest'
      - '-f'
      - 'Dockerfile.production'
      - '.'

  # Step 2: Build frontend image with detailed logging
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "=== Checking frontend directory ==="
        ls -la
        ls -la frontend/
        echo "=== Checking Dockerfile.production content ==="
        head -20 frontend/Dockerfile.production
        echo "=== Building frontend Docker image ==="
        # „Éê„ÉÉ„ÇØ„Ç®„É≥„ÉâURL„ÇíÂèñÂæóÔºàÊó¢„Å´„Éá„Éó„É≠„Ç§Ê∏à„Åø„ÅÆÂ†¥ÂêàÔºâ
        BACKEND_URL=$(gcloud run services describe standing-set-backend \
          --region=${_REGION} \
          --format='value(status.url)' 2>/dev/null || echo "https://standing-set-backend-812480532939.asia-northeast1.run.app")
        echo "Using backend URL: $$BACKEND_URL"
        docker build \
          --progress=plain \
          --no-cache \
          --pull \
          --build-arg VITE_API_URL=$$BACKEND_URL \
          -t gcr.io/$PROJECT_ID/standing-set-frontend:$COMMIT_SHA \
          -t gcr.io/$PROJECT_ID/standing-set-frontend:latest \
          -f frontend/Dockerfile.production \
          ./frontend

  # Step 3: Push backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/standing-set-backend'

  # Step 4: Push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/standing-set-frontend'

  # Step 5: Deploy backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-backend'
    args:
      - 'run'
      - 'deploy'
      - 'standing-set-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/standing-set-backend:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '100'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '0'

  # Step 6: Get backend URL
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'get-backend-url'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$(gcloud run services describe standing-set-backend \
          --region=${_REGION} \
          --format='value(status.url)')
        echo "Backend URL: $$BACKEND_URL"
        echo $$BACKEND_URL > /workspace/backend_url.txt

  # Step 7: Deploy frontend to Cloud Run with backend URL
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$(cat /workspace/backend_url.txt)
        gcloud run deploy standing-set-frontend \
          --image=gcr.io/$PROJECT_ID/standing-set-frontend:$COMMIT_SHA \
          --region=${_REGION} \
          --platform=managed \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --port=80 \
          --min-instances=0 \
          --max-instances=10 \
          --set-env-vars="VITE_API_URL=$$BACKEND_URL"

  # Step 8: Display deployment URLs
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'show-urls'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "======================================"
        echo "üöÄ Deployment Successful!"
        echo "======================================"
        BACKEND_URL=$(gcloud run services describe standing-set-backend \
          --region=${_REGION} \
          --format='value(status.url)')
        FRONTEND_URL=$(gcloud run services describe standing-set-frontend \
          --region=${_REGION} \
          --format='value(status.url)')
        echo "üì¶ Backend URL:  $$BACKEND_URL"
        echo "üåê Frontend URL: $$FRONTEND_URL"
        echo "======================================"

# Substitutions (these will be set in Cloud Build Trigger)
substitutions:
  _REGION: 'asia-northeast1'

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/standing-set-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/standing-set-backend:latest'
  - 'gcr.io/$PROJECT_ID/standing-set-frontend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/standing-set-frontend:latest'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY  # Cloud Logging„ÅÆ„Åø„Çí‰ΩøÁî®ÔºàGCS„Éê„Ç±„ÉÉ„Éà‰∏çË¶ÅÔºâ
  machineType: 'E2_HIGHCPU_8'

# Build timeout
timeout: '1200s'